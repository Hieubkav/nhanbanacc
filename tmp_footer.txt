case "fk": {
      const fkMod = apiOf(field.fk!.resource);
      const [q, setQ] = useState("");
      const [open, setOpen] = useState(false);
      const suggest = useQuery(fkMod.suggest, { q: q ?? "", limit: 8 });
      return (
        <div className="relative space-y-2 group">
          {field.fk!.resource === "images" && (
            <div className="flex items-center gap-3" onClick={() => setOpen(false)}>
              <ImagePreviewThumb id={value} size={56} />
              <div className="text-xs text-muted-foreground min-w-0">
                {value ? (
                  <div className="flex items-center gap-2">
                    <span className="truncate">ID: {String(value)}</span>
                    <Button type="button" variant="outline" size="sm" onClick={() => onChange(undefined)}>Bỏ chọn</Button>
                    <a href="/dashboard/resources/images/new" target="_blank" className="text-xs underline">Tải ảnh mới</a>
                  </div>
                ) : (
                  <div className="text-xs">Chưa chọn ảnh thumbnail</div>
                )}
              </div>
            </div>
          )}
          <Input value={q} placeholder={`Tìm ${field.label.toLowerCase()}...`} onChange={(e) => setQ(e.target.value)} />
          {suggest && suggest.length > 0 && (
            <div className="absolute z-10 mt-1 max-h-64 w-full overflow-auto rounded-md border bg-popover p-1 text-sm shadow hidden group-focus-within:block">
              {suggest.map((s: any) => (
                <button
                  type="button"
                  key={String(s.id)}
                  className="flex w-full items-center gap-2 rounded-sm px-2 py-1 text-left hover:bg-accent"
                  onMouseDown={(e) => { e.preventDefault(); onChange(s.id); setQ(s.label); }}
                >
                  {field.fk!.resource === "images" && <ImagePreviewThumb id={s.id} size={28} />}
                  <span className="truncate">{s.label}</span>
                </button>
              ))}
            </div>
          )}
          {value && <div className="mt-1 text-xs text-muted-foreground">Đã chọn: {String(value)}</div>}
        </div>
      );
    }
    
