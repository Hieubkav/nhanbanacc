help && !example) return null;
            return (
              <p className="text-xs text-muted-foreground">
                {help}
                {example ? <span className="block">Ví dụ: {example}</span> : null}
              </p>
            );
          })()}
        </div>
      ))}
      <div className="flex items-center gap-2">
        <Button type="submit">{isEdit ? "Lưu" : "Tạo"}</Button>
        <Button type="button" variant="outline" onClick={() => router.back()}>Hủy</Button>
      </div>
    </form>
  );
}

function FieldControl({ resource, field, value, onChange, form }: { resource: string; field: FieldConfig; value: any; onChange: (v: any) => void; form?: any }) {
  const mod = apiOf(resource);
  // Override cho resource 'settings' để hiển thị dropdown cho type và group
  if (resource === "settings" && (field.name === "type" || field.name === "group")) {
    const opts = SETTINGS_SELECTS[field.name] ?? [];
    return (
      <select
        className="h-9 rounded-md border bg-background px-3"
        value={value ?? ""}
        onChange={(e) => onChange(e.target.value)}
      >
        <option value="">-- Chọn --</option>
        {opts.map((o) => (
          <option key={o.value} value={o.value}>{o.label}</option>
        ))}
      </select>
    );
  }
  if (resource === "settings" && field.name === "value") {
    const dynamicPlaceholder = exampleForValueByType(form?.type);
    return <Input value={value ?? ""} placeholder={dynamicPlaceholder} onChange={(e) => onChange(e.target.value)} />;
  }
  switch (field.type) {
    case "text":
      return <Input value={value ?? ""} placeholder={field.placeholder} onChange={(e) => onChange(e.target.value)} />;
    case "textarea":
      if ((resource === "posts" && field.name === "content") || (resource === "products" && field.name === "description")) {
        return (
          <div className="rounded-md border bg-background">
            <RichTextEditor value={value ?? ""} onChange={onChange} placeholder={field.placeholder ?? "Nhập nội dung..."} />
          </div>
        );
      }
      return <textarea value={value ?? ""} placeholder={field.placeholder} onChange={(e) => onChange(e.target.value)} 
