1	"use client";
2	
3	import { useMemo } from "react";
4	import { useQuery } from "convex/react";
5	import { api } from "@nhanbanacc/backend/convex/_generated/api";
6	import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from "@/components/ui/dialog";
7	import { Badge } from "@/components/ui/badge";
8	import { StorageImage } from "@/components/shared/storage-image";
9	
10	type Kind = "product" | "post";
11	
12	function ProductDetail({ id }: { id: string }) {
13	  const data = useQuery(api.products.getById, { id: id as any });
14	  const pics = useQuery(api.product_images.listByProduct, { productId: id as any, sort: { field: "sortOrder", direction: "asc" }, pageSize: 10 } as any);
15	  const images = useQuery(api.images.getManyByIds, pics?.items?.length ? { ids: pics.items.map((p: any) => p.imageId) as any } : (undefined as any));
16	  const title = useMemo(() => (data ? (data as any)?.name ?? "" : ""), [data]);
17	  const desc = useMemo(
18	    () => (data ? (data as any)?.shortDesc ?? (data as any)?.description ?? "" : ""),
19	    [data],
20	  );
21	  return (
22	    <>
23	      <DialogHeader>
24	        <DialogTitle className="flex items-center gap-2 text-zinc-900">
25	          {title || (data === undefined ? "Đang tải..." : "Không tìm thấy")}
26	          <Badge variant="secondary">Sản phẩm</Badge>
27	        </DialogTitle>
28	        {desc ? <DialogDescription>{desc}</DialogDescription> : null}
29	      </DialogHeader>
30	      {pics?.items?.length ? (
31	        <div className="mt-2 grid grid-cols-3 gap-2 sm:grid-cols-4">
32	          {pics.items.map((p: any) => (
33	            <div key={String(p._id)} className="relative h-24 w-full overflow-hidden rounded border">
34	              <StorageImage imageId={String(p.imageId)} alt={title} />
35	            </div>
36	          ))}
37	        </div>
38	      ) : null}
39	    </>
40	  );
41	}
42	
43	function PostDetail({ id }: { id: string }) {
44	  const data = useQuery(api.posts.getById, { id: id as any });
45	  const title = useMemo(() => (data ? (data as any)?.title ?? "" : ""), [data]);
46	  const desc = useMemo(() => (data ? (data as any)?.excerpt ?? "" : ""), [data]);
47	  return (
48	    <>
49	      <DialogHeader>
50	        <DialogTitle className="flex items-center gap-2">
51	          {title || (data === undefined ? "Đang tải..." : "Không tìm thấy")}
52	          <Badge variant="secondary">Bài viết</Badge>
53	        </DialogTitle>
54	        {desc ? <DialogDescription>{desc}</DialogDescription> : null}
55	      </DialogHeader>
56	    </>
57	  );
58	}
59	
60	export function EntityDetailDialog({ open, onOpenChange, kind, id }: { open: boolean; onOpenChange: (o: boolean) => void; kind: Kind; id: string }) {
61	  return (
62	    <Dialog open={open} onOpenChange={onOpenChange}>
63	      <DialogContent>
64	        {kind === "product" ? <ProductDetail id={id} /> : <PostDetail id={id} />}
65	        {/* Có thể mở rộng phần thân chi tiết tại đây */}
66	      </DialogContent>
67	    </Dialog>
68	  );
69	}
